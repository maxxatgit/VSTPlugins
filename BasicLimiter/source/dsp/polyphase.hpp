// (c) 2022 Takamitsu Endo
//
// This file is part of BasicLimiter.
//
// BasicLimiter is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// BasicLimiter is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with BasicLimiter.  If not, see <https://www.gnu.org/licenses/>.

#pragma once

#include <algorithm>
#include <array>

namespace SomeDSP {

template<typename Sample, typename Fir> class NaiveConvolver {
private:
  std::array<Sample, Fir::fir.size()> buf{};

public:
  void reset() { buf.fill(Sample(0)); }

  Sample process(Sample input)
  {
    std::rotate(buf.rbegin(), buf.rbegin() + 1, buf.rend());
    buf[0] = input;

    Sample output = 0;
    for (size_t n = 0; n < Fir::fir.size(); ++n) output += buf[n] * Fir::fir[n];
    return output;
  }
};

template<typename Sample, typename FractionalDelayFIR> class FirPolyPhaseUpSampler {
  std::array<Sample, FractionalDelayFIR::bufferSize> buf{};

public:
  std::array<Sample, FractionalDelayFIR::upfold> output;

  void reset() { buf.fill(Sample(0)); }

  void process(Sample input)
  {
    std::rotate(buf.rbegin(), buf.rbegin() + 1, buf.rend());
    buf[0] = input;

    std::fill(output.begin(), output.end(), Sample(0));
    for (size_t i = 0; i < FractionalDelayFIR::coefficient.size(); ++i) {
      auto &&phase = FractionalDelayFIR::coefficient[i];
      for (size_t n = 0; n < phase.size(); ++n) output[i] += buf[n] * phase[n];
    }
  }
};

template<typename Sample, typename Fir> class FirDownSampler {
  std::array<std::array<Sample, Fir::bufferSize>, Fir::upfold> buf{{}};

public:
  void reset() { buf.fill({}); }

  Sample process(const std::array<Sample, Fir::upfold> &input)
  {
    for (size_t i = 0; i < Fir::upfold; ++i) {
      std::rotate(buf[i].rbegin(), buf[i].rbegin() + 1, buf[i].rend());
      buf[i][0] = input[i];
    }

    Sample output = 0;
    for (size_t i = 0; i < Fir::coefficient.size(); ++i) {
      auto &&phase = Fir::coefficient[i];
      for (size_t n = 0; n < phase.size(); ++n) output += buf[i][n] * phase[n];
    }
    return output;
  }
};

/**
HighEliminationFir removes high frequency components near nyquist frequency to reduce
clipping on true peak mode.

```python
import scipy.signal as signal
fir = signal.firwin(63, 18000, window=("dpss", 8), fs=48000)
```
*/
template<typename Sample> struct HighEliminationFir {
  static constexpr size_t delay = 31;

  constexpr static std::array<Sample, 64> fir{
    Sample(-1.1261696120351063e-10), Sample(1.6412510492733276e-09),
    Sample(-6.861679737508092e-09),  Sample(-4.187587803886504e-23),
    Sample(1.0917907702198306e-07),  Sample(-4.835822072334699e-07),
    Sample(9.568016329060755e-07),   Sample(-7.612389324595493e-21),
    Sample(-5.767579805715353e-06),  Sample(1.8023264694887086e-05),
    Sample(-2.656365580988585e-05),  Sample(4.006965485871507e-19),
    Sample(9.930320028059217e-05),   Sample(-0.00025432122839809363),
    Sample(0.00031337136061953494),  Sample(-1.0955576658950727e-18),
    Sample(-0.0008584235932908867),  Sample(0.0019186950800622203),
    Sample(-0.0020860804812595423),  Sample(4.8751437040242514e-18),
    Sample(0.0045830560101920905),   Sample(-0.00930478650490633),
    Sample(0.00927890219336625),     Sample(-1.3400723826788195e-17),
    Sample(-0.01773366776711363),    Sample(0.03431014966519263),
    Sample(-0.03328663765795063),    Sample(2.411021481920415e-17),
    Sample(0.06732847261315267),     Sample(-0.15168727832320167),
    Sample(0.22239297633914018),     Sample(0.7499999999991567),
    Sample(0.22239297633914018),     Sample(-0.15168727832320167),
    Sample(0.06732847261315267),     Sample(2.4110214819204146e-17),
    Sample(-0.03328663765795061),    Sample(0.034310149665192614),
    Sample(-0.017733667767113617),   Sample(-1.340072382678819e-17),
    Sample(0.009278902193366247),    Sample(-0.009304786504906327),
    Sample(0.00458305601019209),     Sample(4.875143704024249e-18),
    Sample(-0.002086080481259541),   Sample(0.0019186950800622188),
    Sample(-0.0008584235932908856),  Sample(-1.0955576658950713e-18),
    Sample(0.0003133713606195345),   Sample(-0.0002543212283980932),
    Sample(9.930320028059196e-05),   Sample(4.006965485871499e-19),
    Sample(-2.6563655809885797e-05), Sample(1.8023264694887052e-05),
    Sample(-5.767579805715342e-06),  Sample(-7.612389324595476e-21),
    Sample(9.568016329060731e-07),   Sample(-4.835822072334688e-07),
    Sample(1.0917907702198282e-07),  Sample(-4.1875878038864944e-23),
    Sample(-6.86167973750808e-09),   Sample(1.6412510492733247e-09),
    Sample(-1.1261696120351041e-10), Sample(0.0),
  };
};

/**
FIR polyphase lowpass coefficients for 8 fold downsampling.

```python
nTaps = 64
nPhase = 8
fir = signal.firwin(nTaps * nPhase - 1, 22000, window=("dpss", 4), fs=8 * 48000)
fir = np.hstack((fir, [0]))
poly = fir.reshape((nTaps, nPhase)).T
for i, p in enumerate(poly):
    poly[i] = p[::-1]
```
*/
template<typename Sample> struct DownSamplerFir8Fold {
  constexpr static size_t bufferSize = 64;
  constexpr static size_t intDelay = 31;
  constexpr static size_t upfold = 8;

  constexpr static std::array<std::array<Sample, bufferSize>, upfold> coefficient{{
    {
      Sample(2.125565390657771e-07),   Sample(-6.150353686604891e-07),
      Sample(1.2789193311981482e-06),  Sample(-2.0784354544448536e-06),
      Sample(2.5648586076743937e-06),  Sample(-1.7929909986880997e-06),
      Sample(-1.8111265120660653e-06), Sample(1.0460499003917476e-05),
      Sample(-2.6803681249776992e-05), Sample(5.3427560987080216e-05),
      Sample(-9.202785264606518e-05),  Sample(0.00014228015031060088),
      Sample(-0.00020053795512754762), Sample(0.0002585830806383253),
      Sample(-0.0003027347087070962),  Sample(0.00031366024883365095),
      Sample(-0.00026720214217159234), Sample(0.00013642872215355596),
      Sample(0.00010506050359863008),  Sample(-0.0004787696193851556),
      Sample(0.0009963043176519299),   Sample(-0.001654331317583461),
      Sample(0.0024301510308924307),   Sample(-0.003278388732082199),
      Sample(0.004128845113347571),    Sample(-0.004884498482406109),
      Sample(0.005416188094246379),    Sample(-0.005543505890853685),
      Sample(0.004965540483979732),    Sample(-0.002971363022041904),
      Sample(-0.003441355557010601),   Sample(0.11211450709125066),
      Sample(0.026369858291912764),    Sample(-0.016073344158721026),
      Sample(0.012016385837133442),    Sample(-0.009285380615924932),
      Sample(0.0070739449219617305),   Sample(-0.005183017141666066),
      Sample(0.0035681558403097588),   Sample(-0.002227362871881669),
      Sample(0.0011631598343272386),   Sample(-0.00036845931028144536),
      Sample(-0.0001773977130877124),  Sample(0.0005074186113557051),
      Sample(-0.0006630559235352041),  Sample(0.0006892533575358323),
      Sample(-0.0006296118873865935),  Sample(0.0005224771744333244),
      Sample(-0.0003983948473425897),  Sample(0.00027905100942631877),
      Sample(-0.00017754452534955286), Sample(9.965348800401445e-05),
      Sample(-4.5673080774079504e-05), Sample(1.2409504523143208e-05),
      Sample(5.0069939132444545e-06),  Sample(-1.1708208813530564e-05),
      Sample(1.2163999333128349e-05),  Sample(-9.729324384418425e-06),
      Sample(6.567879904107959e-06),   Sample(-3.82231202190566e-06),
      Sample(1.9011769779384796e-06),  Sample(-7.783352552745987e-07),
      Sample(2.3829027295968598e-07),  Sample(-3.915206301870446e-08),
    },
    {
      Sample(1.6141708210768468e-07),  Sample(-4.368545778047036e-07),
      Sample(7.908198666638068e-07),   Sample(-9.664123766192893e-07),
      Sample(3.767571874532097e-07),   Sample(2.0056454622849333e-06),
      Sample(-7.679618725350753e-06),  Sample(1.8491760803239896e-05),
      Sample(-3.628832379335935e-05),  Sample(6.230046700149663e-05),
      Sample(-9.62758551357499e-05),   Sample(0.00013544677977966052),
      Sample(-0.0001735117794770913),  Sample(0.00019988455266596594),
      Sample(-0.00019950765088848346), Sample(0.00015351762608240433),
      Sample(-4.096966032475958e-05),  Sample(-0.00015831628202484457),
      Sample(0.00045992110672498607),  Sample(-0.0008703462612050525),
      Sample(0.0013824012735169948),   Sample(-0.0019710465144734198),
      Sample(0.0025901851553453924),   Sample(-0.003170550258863768),
      Sample(0.003618070733658279),    Sample(-0.0038105080270002182),
      Sample(0.0035864082211951123),   Sample(-0.0027096235641700817),
      Sample(0.0007531452561754326),   Sample(0.003350287872594318),
      Sample(-0.013951781702075193),   Sample(0.10490018765339143),
      Sample(0.04396752706036554),     Sample(-0.021151537768450572),
      Sample(0.013818705170880376),    Sample(-0.009591008528116746),
      Sample(0.00658908038910519),     Sample(-0.004290661943155855),
      Sample(0.002509089195355154),    Sample(-0.0011601958647453417),
      Sample(0.00018945273847759486),  Sample(0.0004536339456394523),
      Sample(-0.000823310199303635),   Sample(0.0009776301624575903),
      Sample(-0.0009751992188306084),  Sample(0.0008709711308546571),
      Sample(-0.0007124891689097546),  Sample(0.0005373385838416012),
      Sample(-0.00037210630841408244), Sample(0.0002327819264129023),
      Sample(-0.00012628509416653643), Sample(5.267415312893954e-05),
      Sample(-7.5710619332425785e-06), Sample(-1.5593582585128124e-05),
      Sample(2.3787765184122517e-05),  Sample(-2.316670080146867e-05),
      Sample(1.844141360468106e-05),   Sample(-1.2729516713808447e-05),
      Sample(7.73858778032334e-06),    Sample(-4.123463292608434e-06),
      Sample(1.882490044123759e-06),   Sample(-7.00008452787857e-07),
      Sample(1.8878347676103394e-07),  Sample(-2.5596576477450395e-08),
    },
    {
      Sample(1.025834136491538e-07),   Sample(-2.4121709052444264e-07),
      Sample(2.917700964360208e-07),   Sample(9.013639459147172e-08),
      Sample(-1.5482889551327005e-06), Sample(5.066246144354138e-06),
      Sample(-1.1900402507196432e-05), Sample(2.3345694057386756e-05),
      Sample(-4.0291647595821685e-05), Sample(6.25673092253584e-05),
      Sample(-8.813559340119985e-05),  Sample(0.00011227180744688249),
      Sample(-0.00012693176041796527), Sample(0.00012056176655652252),
      Sample(-7.860574538253582e-05),  Sample(-1.5091210875078336e-05),
      Sample(0.00017590155940257058),  Sample(-0.0004151438365786776),
      Sample(0.000736199718928375),    Sample(-0.0011304694020752618),
      Sample(0.0015737139882785554),   Sample(-0.0020233042767254903),
      Sample(0.002416678237386948),    Sample(-0.0026708247658857407),
      Sample(0.002681694168949812),    Sample(-0.00232062364333469),
      Sample(0.0014206687004410916),   Sample(0.0002662502684135455),
      Sample(-0.0032034883422971255),  Sample(0.008562474018846317),
      Sample(-0.020890473528941297),   Sample(0.09349864562620604),
      Sample(0.061858989396365825),    Sample(-0.02410111793157994),
      Sample(0.013937335861876883),    Sample(-0.00863684280168449),
      Sample(0.005193342848972612),    Sample(-0.002773046383320373),
      Sample(0.0010552516584914416),   Sample(0.00012141166311221133),
      Sample(-0.0008642358443355885),  Sample(0.001262205532161629),
      Sample(-0.0013972592048873355),  Sample(0.0013458289630741541),
      Sample(-0.0011767075758551725),  Sample(0.0009481488265863405),
      Sample(-0.0007056747938044499),  Sample(0.000481241493600147),
      Sample(-0.0002938732364751146),  Sample(0.0001515207958128243),
      Sample(-5.370021043085624e-05),  Sample(-5.591472993942413e-06),
      Sample(3.513724310098952e-05),   Sample(-4.426799296959883e-05),
      Sample(4.131070380406162e-05),   Sample(-3.273860836374245e-05),
      Sample(2.2925993903625266e-05),  Sample(-1.433920520306938e-05),
      Sample(7.974072351969956e-06),   Sample(-3.869636965941065e-06),
      Sample(1.5736160787569876e-06),  Sample(-4.899441839294859e-07),
      Sample(8.890260547469634e-08),   Sample(3.2771921864536298e-09),
    },
    {
      Sample(4.72814643983178e-08),    Sample(-5.8563671289374425e-08),
      Sample(-1.5102991131936032e-07), Sample(9.644849836820454e-07),
      Sample(-3.0029383052174097e-06), Sample(7.096746571641704e-06),
      Sample(-1.4135533635643809e-05), Sample(2.4757137113367447e-05),
      Sample(-3.886430003002643e-05),  Sample(5.500627684939052e-05),
      Sample(-6.972437409140283e-05),  Sample(7.702358699982936e-05),
      Sample(-6.817980230506113e-05),  Sample(3.210490170266288e-05),
      Sample(4.354474244519853e-05),   Sample(-0.00017042409977969944),
      Sample(0.000356770689838179),    Sample(-0.0006041144617757429),
      Sample(0.0009038158780658444),   Sample(-0.0012339377125064202),
      Sample(0.0015569747331319443),   Sample(-0.0018188425602603771),
      Sample(0.001949220485441568),    Sample(-0.0018627944744575363),
      Sample(0.0014600157812540962),   Sample(-0.0006242524304623327),
      Sample(-0.0007917211599130163),  Sample(0.0030080275144323777),
      Sample(-0.006445867551539218),   Sample(0.012177690143704407),
      Sample(-0.0241896467688691),     Sample(0.07878264885735453),
      Sample(0.07878264885735645),     Sample(-0.024189646768870626),
      Sample(0.012177690143705486),    Sample(-0.0064458675515398885),
      Sample(0.0030080275144326904),   Sample(-0.0007917211599130897),
      Sample(-0.0006242524304623797),  Sample(0.0014600157812541862),
      Sample(-0.0018627944744576267),  Sample(0.001949220485441641),
      Sample(-0.0018188425602604379),  Sample(0.0015569747331319885),
      Sample(-0.0012339377125064389),  Sample(0.0009038158780658467),
      Sample(-0.0006041144617757354),  Sample(0.0003567706898381717),
      Sample(-0.0001704240997796948),  Sample(4.3544742445197114e-05),
      Sample(3.2104901702661746e-05),  Sample(-6.817980230505843e-05),
      Sample(7.702358699982655e-05),   Sample(-6.972437409140053e-05),
      Sample(5.500627684938879e-05),   Sample(-3.886430003002514e-05),
      Sample(2.4757137113366573e-05),  Sample(-1.4135533635643301e-05),
      Sample(7.096746571641437e-06),   Sample(-3.0029383052172856e-06),
      Sample(9.644849836820058e-07),   Sample(-1.5102991131935396e-07),
      Sample(-5.856367128937195e-08),  Sample(4.7281464398315894e-08),
    },
    {
      Sample(3.2771921864537613e-09),  Sample(8.890260547470006e-08),
      Sample(-4.899441839295068e-07),  Sample(1.573616078757052e-06),
      Sample(-3.869636965941224e-06),  Sample(7.974072351970262e-06),
      Sample(-1.4339205203069897e-05), Sample(2.2925993903626083e-05),
      Sample(-3.2738608363743534e-05), Sample(4.1310703804062924e-05),
      Sample(-4.4267992969600256e-05), Sample(3.513724310099077e-05),
      Sample(-5.591472993942634e-06),  Sample(-5.370021043085818e-05),
      Sample(0.00015152079581282925),  Sample(-0.0002938732364751228),
      Sample(0.0004812414936001573),   Sample(-0.0007056747938044597),
      Sample(0.0009481488265863402),   Sample(-0.001176707575855156),
      Sample(0.0013458289630741175),   Sample(-0.0013972592048872889),
      Sample(0.0012622055321615826),   Sample(-0.0008642358443355475),
      Sample(0.00012141166311220408),  Sample(0.0010552516584913642),
      Sample(-0.002773046383320124),   Sample(0.005193342848972078),
      Sample(-0.008636842801683586),   Sample(0.013937335861875613),
      Sample(-0.024101117931578337),   Sample(0.06185898939636397),
      Sample(0.09349864562620777),     Sample(-0.02089047352894253),
      Sample(0.00856247401884705),     Sample(-0.0032034883422974534),
      Sample(0.00026625026841357337),  Sample(0.0014206687004412258),
      Sample(-0.002320623643334868),   Sample(0.002681694168949982),
      Sample(-0.002670824765885875),   Sample(0.0024166782373870425),
      Sample(-0.0020233042767255575),  Sample(0.0015737139882786029),
      Sample(-0.0011304694020752805),  Sample(0.0007361997189283781),
      Sample(-0.000415143836578673),   Sample(0.00017590155940256716),
      Sample(-1.5091210875077938e-05), Sample(-7.860574538253331e-05),
      Sample(0.0001205617665565183),   Sample(-0.0001269317604179603),
      Sample(0.00011227180744687834),  Sample(-8.813559340119687e-05),
      Sample(6.256730922535643e-05),   Sample(-4.029164759582035e-05),
      Sample(2.334569405738595e-05),   Sample(-1.1900402507196006e-05),
      Sample(5.0662461443539475e-06),  Sample(-1.5482889551326366e-06),
      Sample(9.013639459146804e-08),   Sample(2.917700964360085e-07),
      Sample(-2.412170905244324e-07),  Sample(1.0258341364914965e-07),
    },
    {
      Sample(-2.5596576477451427e-08), Sample(1.8878347676104175e-07),
      Sample(-7.000084527878869e-07),  Sample(1.8824900441238365e-06),
      Sample(-4.123463292608604e-06),  Sample(7.73858778032364e-06),
      Sample(-1.2729516713808908e-05), Sample(1.8441413604681722e-05),
      Sample(-2.3166700801469445e-05), Sample(2.3787765184123272e-05),
      Sample(-1.5593582585128622e-05), Sample(-7.57106193324285e-06),
      Sample(5.2674153128941606e-05),  Sample(-0.00012628509416654106),
      Sample(0.00023278192641290992),  Sample(-0.0003721063084140931),
      Sample(0.0005373385838416131),   Sample(-0.0007124891689097653),
      Sample(0.0008709711308546586),   Sample(-0.0009751992188305963),
      Sample(0.0009776301624575651),   Sample(-0.0008233101993036073),
      Sample(0.00045363394563943617),  Sample(0.00018945273847758616),
      Sample(-0.0011601958647452742),  Sample(0.0025090891953549748),
      Sample(-0.0042906619431554785),  Sample(0.006589080389104517),
      Sample(-0.009591008528115737),   Sample(0.013818705170879082),
      Sample(-0.021151537768449094),   Sample(0.04396752706036397),
      Sample(0.10490018765339273),     Sample(-0.013951781702075958),
      Sample(0.003350287872594596),    Sample(0.000753145256175509),
      Sample(-0.0027096235641703675),  Sample(0.0035864082211954588),
      Sample(-0.003810508027000518),   Sample(0.003618070733658513),
      Sample(-0.003170550258863932),   Sample(0.0025901851553454974),
      Sample(-0.0019710465144734857),  Sample(0.0013824012735170381),
      Sample(-0.0008703462612050685),  Sample(0.0004599211067249887),
      Sample(-0.0001583162820248431),  Sample(-4.096966032475883e-05),
      Sample(0.0001535176260824004),   Sample(-0.0001995076508884772),
      Sample(0.00019988455266595903),  Sample(-0.00017351177947708455),
      Sample(0.00013544677977965546),  Sample(-9.627585513574658e-05),
      Sample(6.230046700149467e-05),   Sample(-3.628832379335815e-05),
      Sample(1.8491760803239266e-05),  Sample(-7.679618725350479e-06),
      Sample(2.0056454622848583e-06),  Sample(3.767571874531943e-07),
      Sample(-9.664123766192495e-07),  Sample(7.908198666637733e-07),
      Sample(-4.368545778046851e-07),  Sample(1.6141708210767809e-07),
    },
    {
      Sample(-3.9152063018706043e-08), Sample(2.3829027295969572e-07),
      Sample(-7.783352552746321e-07),  Sample(1.9011769779385584e-06),
      Sample(-3.822312021905817e-06),  Sample(6.567879904108215e-06),
      Sample(-9.729324384418779e-06),  Sample(1.2163999333128791e-05),
      Sample(-1.1708208813530955e-05), Sample(5.006993913244615e-06),
      Sample(1.24095045231436e-05),    Sample(-4.567308077408112e-05),
      Sample(9.965348800401834e-05),   Sample(-0.0001775445253495595),
      Sample(0.0002790510094263281),   Sample(-0.0003983948473426014),
      Sample(0.0005224771744333364),   Sample(-0.0006296118873866036),
      Sample(0.0006892533575358349),   Sample(-0.0006630559235351968),
      Sample(0.0005074186113556931),   Sample(-0.00017739771308770646),
      Sample(-0.0003684593102814324),  Sample(0.0011631598343271867),
      Sample(-0.002227362871881543),   Sample(0.00356815584030951),
      Sample(-0.005183017141665622),   Sample(0.007073944921961016),
      Sample(-0.009285380615923948),   Sample(0.012016385837132293),
      Sample(-0.016073344158719853),   Sample(0.02636985829191169),
      Sample(0.11211450709125137),     Sample(-0.0034413555570107744),
      Sample(-0.002971363022042141),   Sample(0.004965540483980228),
      Sample(-0.00554350589085427),    Sample(0.0054161880942469095),
      Sample(-0.004884498482406504),   Sample(0.004128845113347844),
      Sample(-0.0032783887320823727),  Sample(0.0024301510308925326),
      Sample(-0.0016543313175835174),  Sample(0.0009963043176519624),
      Sample(-0.00047876961938516516), Sample(0.00010506050359863091),
      Sample(0.00013642872215355496),  Sample(-0.0002672021421715877),
      Sample(0.00031366024883364315),  Sample(-0.00030273470870708686),
      Sample(0.00025858308063831655),  Sample(-0.0002005379551275399),
      Sample(0.00014228015031059554),  Sample(-9.202785264606194e-05),
      Sample(5.3427560987078536e-05),  Sample(-2.6803681249776115e-05),
      Sample(1.0460499003917124e-05),  Sample(-1.8111265120660001e-06),
      Sample(-1.7929909986880332e-06), Sample(2.564858607674291e-06),
      Sample(-2.0784354544447676e-06), Sample(1.2789193311980946e-06),
      Sample(-6.15035368660463e-07),   Sample(2.1255653906576844e-07),
    },
    {
      Sample(0.000000000000000),       Sample(2.426408167433914e-07),
      Sample(-7.40515322738101e-07),   Sample(1.6763133155664495e-06),
      Sample(-3.087457837122285e-06),  Sample(4.735921232673349e-06),
      Sample(-5.887471218414641e-06),  Sample(5.085829627031814e-06),
      Sample(-3.079652525428958e-19),  Sample(-1.2551480088956103e-05),
      Sample(3.628883321277796e-05),   Sample(-7.47836670396763e-05),
      Sample(0.00013036484063538956),  Sample(-0.0002026762749099425),
      Sample(0.0002870559536895979),   Sample(-0.00037301534828206734),
      Sample(0.00044318032281769987),  Sample(-0.00047307993841439876),
      Sample(0.0004321165870477474),   Sample(-0.00028591110691797796),
      Sample(6.856478704174502e-18),   Sample(0.00045540151338236177),
      Sample(-0.0011001206486617307),  Sample(0.0019389915104717924),
      Sample(-0.002957923664528147),   Sample(0.004121892279773803),
      Sample(-0.0053754662929138925),  Sample(0.006646151027428077),
      Sample(-0.00785039189876566),    Sample(0.008901638669982304),
      Sample(-0.009719487511665804),   Sample(0.010238676634286323),
      Sample(0.11458329936930657),     Sample(0.010238676634286792),
      Sample(-0.009719487511666548),   Sample(0.008901638669983176),
      Sample(-0.007850391898766492),   Sample(0.006646151027428738),
      Sample(-0.00537546629291434),    Sample(0.004121892279774084),
      Sample(-0.002957923664528309),   Sample(0.0019389915104718759),
      Sample(-0.001100120648661769),   Sample(0.00045540151338237684),
      Sample(6.856478704174651e-18),   Sample(-0.0002859111069179807),
      Sample(0.00043211658704774496),  Sample(-0.00047307993841439095),
      Sample(0.0004431803228176892),   Sample(-0.00037301534828205617),
      Sample(0.0002870559536895883),   Sample(-0.00020267627490993476),
      Sample(0.00013036484063538452),  Sample(-7.478366703967366e-05),
      Sample(3.6288833212776805e-05),  Sample(-1.2551480088955697e-05),
      Sample(-3.079652525428855e-19),  Sample(5.08582962703163e-06),
      Sample(-5.887471218414424e-06),  Sample(4.7359212326731614e-06),
      Sample(-3.0874578371221573e-06), Sample(1.6763133155663797e-06),
      Sample(-7.405153227380693e-07),  Sample(2.426408167433814e-07),
    },
  }};
};

/**
FIR polyphase lowpass coefficients for 8 fold upsampling.

```python
nTaps = 64
nPhase = 8
fir = signal.firwin(nTaps * nPhase - 1, 20000, window=("dpss", 4), fs=8 * 48000)
fir = np.hstack((fir, [0]))[::1]
poly = fir.reshape((nTaps, nPhase)).T
for i, p in enumerate(poly):
    poly[i] = p[::-1]
```
*/
template<typename Sample> struct UpSamplerFir8Fold {
  constexpr static size_t bufferSize = 64;
  constexpr static size_t intDelay = 31;
  constexpr static size_t upfold = 8;

  constexpr static std::array<std::array<Sample, bufferSize>, upfold> coefficient{{
    {
      Sample(0.00000000000000000),     Sample(-1.0048014933719314e-06),
      Sample(-2.9093182736232454e-21), Sample(6.941792174322171e-06),
      Sample(-2.4699674041240346e-05), Sample(5.35808569096602e-05),
      Sample(-8.157923169550497e-05),  Sample(7.86005830579935e-05),
      Sample(-6.157751704915017e-19),  Sample(-0.00019398086951028935),
      Sample(0.0005028330539205572),   Sample(-0.0008460809979668288),
      Sample(0.0010429192040833251),   Sample(-0.0008393040644762677),
      Sample(1.237713244904676e-17),   Sample(0.0015446963294755735),
      Sample(-0.003545444210921345),   Sample(0.005352290978180852),
      Sample(-0.0059875858185055135),  Sample(0.004418704784577277),
      Sample(-1.3709499069042943e-17), Sample(-0.0070381485622512336),
      Sample(0.015243725864761427),    Sample(-0.02193719480697294),
      Sample(0.023663400184539427),    Sample(-0.017069195421539684),
      Sample(2.633220245222886e-17),   Sample(0.027522420041132666),
      Sample(-0.06280316403486084),    Sample(0.10071059133062965),
      Sample(-0.13467723140551846),    Sample(0.158236907685576),
      Sample(0.8333334690622386),      Sample(0.15823690768558324),
      Sample(-0.13467723140552879),    Sample(0.10071059133063953),
      Sample(-0.06280316403486748),    Sample(0.02752242004113541),
      Sample(2.6332202452231054e-17),  Sample(-0.017069195421540846),
      Sample(0.023663400184540724),    Sample(-0.021937194806973887),
      Sample(0.015243725864761956),    Sample(-0.007038148562251467),
      Sample(-1.3709499069043243e-17), Sample(0.004418704784577319),
      Sample(-0.00598758581850548),    Sample(0.005352290978180764),
      Sample(-0.00354544421092126),    Sample(0.001544696329475527),
      Sample(1.2377132449046344e-17),  Sample(-0.0008393040644762357),
      Sample(0.001042919204083285),    Sample(-0.0008460809979667989),
      Sample(0.0005028330539205413),   Sample(-0.00019398086951028307),
      Sample(-6.157751704914811e-19),  Sample(7.860058305799064e-05),
      Sample(-8.157923169550196e-05),  Sample(5.358085690965808e-05),
      Sample(-2.4699674041239326e-05), Sample(6.941792174321881e-06),
      Sample(-2.9093182736231213e-21), Sample(-1.0048014933718901e-06),
    },
    {
      Sample(4.842394861521769e-07),   Sample(-1.7632471030663839e-06),
      Sample(2.138572059755136e-06),   Sample(2.9815682596053208e-06),
      Sample(-2.0434752954419393e-05), Sample(5.4623543536643715e-05),
      Sample(-9.875553414002358e-05),  Sample(0.00012560663752567513),
      Sample(-8.54729674311902e-05),   Sample(-7.972617852129173e-05),
      Sample(0.00040183602219305727),  Sample(-0.0008383523038353491),
      Sample(0.0012325315731455129),   Sample(-0.0013137542968061366),
      Sample(0.0007667270471964599),   Sample(0.0006247926654965845),
      Sample(-0.0027932549521545585),  Sample(0.0052363369677845),
      Sample(-0.006996126430964126),   Sample(0.006846779810313812),
      Sample(-0.003704287746582082),   Sample(-0.002824697211132692),
      Sample(0.011931195424229837),    Sample(-0.02135038211370866),
      Sample(0.027548409186995654),    Sample(-0.026402842090744037),
      Sample(0.01424097851058672),     Sample(0.011093890728881079),
      Sample(-0.04964127938450005),    Sample(0.09993751172538101),
      Sample(-0.16314922034595403),    Sample(0.27229771569081745),
      Sample(0.8184650415613068),      Sample(0.05479657699757667),
      Sample(-0.09621662936196393),    Sample(0.09114498592997801),
      Sample(-0.06856303952070912),    Sample(0.04007749812120431),
      Sample(-0.013420761695684942),   Sample(-0.006475164427949487),
      Sample(0.01752684329398425),     Sample(-0.02021100607420484),
      Sample(0.016791954554847402),    Sample(-0.010287935066861601),
      Sample(0.0034951426590088303),   Sample(0.0016728745052566347),
      Sample(-0.0044177408470113515),  Sample(0.004904629328319845),
      Sample(-0.0038794042002077626),  Sample(0.002240108635133834),
      Sample(-0.0007104888897566399),  Sample(-0.00031449865467166727),
      Sample(0.0007606547307629236),   Sample(-0.0007653744418273721),
      Sample(0.0005423056231455707),   Sample(-0.00027677741365252957),
      Sample(7.636436152749467e-05),   Sample(2.883850033124167e-05),
      Sample(-5.805939869693908e-05),  Sample(4.707926608655257e-05),
      Sample(-2.5706449133470613e-05), Sample(9.463461423673158e-06),
      Sample(-1.6898854912005256e-06), Sample(-3.333470989835078e-07),
    },
    {
      Sample(6.315990066503118e-07),   Sample(-2.5114847412007227e-06),
      Sample(4.5343525311482105e-06),  Sample(-2.1917434554683303e-06),
      Sample(-1.2871170416800206e-05), Sample(4.92208839662451e-05),
      Sample(-0.0001066234505551568),  Sample(0.000163928082547214),
      Sample(-0.00017111506635427562), Sample(5.616110754135031e-05),
      Sample(0.000244703412681262),    Sample(-0.0007347085809158956),
      Sample(0.0012997418940651204),   Sample(-0.0016800362642003022),
      Sample(0.0015078608165832751),   Sample(-0.00043323552692927275),
      Sample(-0.0016772736880051823),  Sample(0.004531750198567516),
      Sample(-0.007295323883341978),   Sample(0.008668670497355773),
      Sample(-0.007221021739455306),   Sample(0.0019437728716879697),
      Sample(0.0071186832147156365),   Sample(-0.01838481231098355),
      Sample(0.0286279907915969),      Sample(-0.033379718058810674),
      Sample(0.027793055590635374),    Sample(-0.007671527329163998),
      Sample(-0.029937820825432438),   Sample(0.08789315351684777),
      Sample(-0.17716697280214028),    Sample(0.3908329675724201),
      Sample(0.774819113205274),       Sample(-0.032939097325828),
      Sample(-0.052574632635762335),   Sample(0.07308648209026068),
      Sample(-0.0668603300536614),     Sample(0.04771185316525531),
      Sample(-0.024682825826427432),   Sample(0.004212443447799845),
      Sample(0.009896703280957745),    Sample(-0.016474737587976136),
      Sample(0.016509643319757697),    Sample(-0.012288341606358374),
      Sample(0.006428595919357515),    Sample(-0.0010858388140034413),
      Sample(-0.0024843896059802816),  Sample(0.003975764729336121),
      Sample(-0.0037880683075865985),  Sample(0.0026541540051910556),
      Sample(-0.0012947658327676671),  Sample(0.00020201610537206672),
      Sample(0.00042278988831446904),  Sample(-0.000612357555268229),
      Sample(0.0005218336966156089),   Sample(-0.0003225715482454904),
      Sample(0.00013658478623995886),  Sample(-1.813099674444762e-05),
      Sample(-3.147373520937132e-05),  Sample(3.656115099628479e-05),
      Sample(-2.3846356860455196e-05), Sample(1.0520687839002262e-05),
      Sample(-2.8297553447009323e-06), Sample(1.8793450430966677e-07),
    },
    {
      Sample(7.186572329682188e-07),   Sample(-3.1253746289864622e-06),
      Sample(6.913478281696897e-06),   Sample(-8.145122898342882e-06),
      Sample(-2.3842282867605245e-06), Sample(3.703603331572971e-05),
      Sample(-0.00010293870017744774), Sample(0.00018792450040180925),
      Sample(-0.00024692608382445813), Sample(0.00020027033693283475),
      Sample(4.3862039185234574e-05),  Sample(-0.0005379881704477352),
      Sample(0.0012261571129864631),   Sample(-0.0018878330320655995),
      Sample(0.0021380715710835915),   Sample(-0.0015211039464684774),
      Sample(-0.00029651091094667074), Sample(0.0032775467815958676),
      Sample(-0.006806598162265994),   Sample(0.009645478588242568),
      Sample(-0.010150714766405698),   Sample(0.006773778850936942),
      Sample(0.001250630642990874),    Sample(-0.013232360301947752),
      Sample(0.026624428748171607),    Sample(-0.03709741399629923),
      Sample(0.03912975513141372),     Sample(-0.02688102665519204),
      Sample(-0.00532148237607762),    Sample(0.06473275041019699),
      Sample(-0.17301780102630165),    Sample(0.5070584824605544),
      Sample(0.7051996270231959),      Sample(-0.10127501560301028),
      Sample(-0.008483952981448585),   Sample(0.049048777884189376),
      Sample(-0.05838616421890739),    Sample(0.04994366462991233),
      Sample(-0.032745732441425084),   Sample(0.013880595703571818),
      Sample(0.0016455951842127626),   Sample(-0.011224399749915927),
      Sample(0.014524955139425026),    Sample(-0.012899742373909525),
      Sample(0.00852639731159017),     Sample(-0.0035690257532031166),
      Sample(-0.00041133681484101627), Sample(0.002693237993939912),
      Sample(-0.003309359730093629),   Sample(0.0027633881031870577),
      Sample(-0.0017012165508457687),  Sample(0.0006570057349210031),
      Sample(6.917486613771481e-05),   Sample(-0.00040935078457142817),
      Sample(0.00044916000531743116),  Sample(-0.00033027086095546547),
      Sample(0.00017608142483351027),  Sample(-5.769201200387562e-05),
      Sample(-5.019786803035537e-06),  Sample(2.370593332841039e-05),
      Sample(-1.976605833330133e-05),  Sample(1.0257189336902446e-05),
      Sample(-3.4037532666266265e-06), Sample(5.309773602236105e-07),
    },
    {
      Sample(6.989183566010427e-07),   Sample(-3.467085807049449e-06),
      Sample(8.941271106246278e-06),   Sample(-1.4257093521524157e-05),
      Sample(1.0213761182479507e-05),  Sample(1.8521623809545284e-05),
      Sample(-8.655099223183188e-05),  Sample(0.0001929593468091312),
      Sample(-0.00030291183967062226), Sample(0.00033680000790976654),
      Sample(-0.00018197192392882574), Sample(-0.00026197691829610216),
      Sample(0.0010078392449733892),   Sample(-0.0019006740284436383),
      Sample(0.0025779353510370843),   Sample(-0.0025192225591785344),
      Sample(0.0012134683608332748),   Sample(0.001576663431047076),
      Sample(-0.005534008340812138),   Sample(0.009617421187195028),
      Sample(-0.012135200694964213),   Sample(0.011136659737207863),
      Sample(-0.00508722246014425),    Sample(-0.006335840420395859),
      Sample(0.02158206907149015),     Sample(-0.03695698534638945),
      Sample(0.04687146717820909),     Sample(-0.044464901283230766),
      Sample(0.021924044084065335),    Sample(0.031782253097805364),
      Sample(-0.14811170087727632),    Sample(0.6140390301914246),
      Sample(0.6140390301914396),      Sample(-0.14811170087728565),
      Sample(0.03178225309780818),     Sample(0.02192404408406761),
      Sample(-0.044464901283235395),   Sample(0.04687146717821344),
      Sample(-0.036956985346392225),   Sample(0.02158206907149148),
      Sample(-0.006335840420396167),   Sample(-0.0050872224601444405),
      Sample(0.011136659737208234),    Sample(-0.012135200694964559),
      Sample(0.009617421187195174),    Sample(-0.005534008340812152),
      Sample(0.0015766634310470564),   Sample(0.0012134683608332499),
      Sample(-0.002519222559178466),   Sample(0.0025779353510370006),
      Sample(-0.0019006740284435713),  Sample(0.0010078392449733495),
      Sample(-0.0002619769182960926),  Sample(-0.00018197192392881977),
      Sample(0.0003368000079097559),   Sample(-0.00030291183967061223),
      Sample(0.0001929593468091244),   Sample(-8.655099223182878e-05),
      Sample(1.8521623809544586e-05),  Sample(1.0213761182479085e-05),
      Sample(-1.4257093521523573e-05), Sample(8.941271106245902e-06),
      Sample(-3.4670858070493025e-06), Sample(6.989183566010145e-07),
    },
    {
      Sample(5.309773602236319e-07),  Sample(-3.4037532666267705e-06),
      Sample(1.0257189336902878e-05), Sample(-1.9766058333302137e-05),
      Sample(2.3705933328411367e-05), Sample(-5.019786803035726e-06),
      Sample(-5.769201200387768e-05), Sample(0.00017608142483351637),
      Sample(-0.0003302708609554764), Sample(0.0004491600053174453),
      Sample(-0.000409350784571442),  Sample(6.917486613771736e-05),
      Sample(0.0006570057349210289),  Sample(-0.0017012165508458283),
      Sample(0.0027633881031871458),  Sample(-0.0033093597300937164),
      Sample(0.0026932379939399644),  Sample(-0.0004113368148410208),
      Sample(-0.0035690257532031023), Sample(0.008526397311590028),
      Sample(-0.012899742373909137),  Sample(0.014524955139424544),
      Sample(-0.01122439974991549),   Sample(0.0016455951842126797),
      Sample(0.013880595703570938),   Sample(-0.03274573244142257),
      Sample(0.04994366462990761),    Sample(-0.05838616421890128),
      Sample(0.04904877788418436),    Sample(-0.00848395298144786),
      Sample(-0.10127501560300431),   Sample(0.7051996270231828),
      Sample(0.5070584824605696),     Sample(-0.17301780102631317),
      Sample(0.06473275041020289),    Sample(-0.005321482376078177),
      Sample(-0.026881026655194807),  Sample(0.03912975513141724),
      Sample(-0.03709741399630195),   Sample(0.0266244287481732),
      Sample(-0.013232360301948378),  Sample(0.0012506306429909198),
      Sample(0.006773778850937167),   Sample(-0.010150714766405973),
      Sample(0.009645478588242702),   Sample(-0.006806598162265995),
      Sample(0.003277546781595822),   Sample(-0.0002965109109466644),
      Sample(-0.0015211039464684349), Sample(0.0021380715710835213),
      Sample(-0.0018878330320655314), Sample(0.0012261571129864148),
      Sample(-0.000537988170447716),  Sample(4.386203918523316e-05),
      Sample(0.00020027033693282843), Sample(-0.00024692608382444995),
      Sample(0.00018792450040180255), Sample(-0.00010293870017744403),
      Sample(3.7036033315728285e-05), Sample(-2.3842282867604262e-06),
      Sample(-8.145122898342549e-06), Sample(6.913478281696601e-06),
      Sample(-3.125374628986332e-06), Sample(7.1865723296819e-07),
    },
    {
      Sample(1.8793450430967445e-07),  Sample(-2.8297553447010525e-06),
      Sample(1.0520687839002706e-05),  Sample(-2.3846356860456175e-05),
      Sample(3.6561150996286287e-05),  Sample(-3.1473735209372496e-05),
      Sample(-1.8130996744448267e-05), Sample(0.00013658478623996352),
      Sample(-0.0003225715482455011),  Sample(0.0005218336966156254),
      Sample(-0.0006123575552682501),  Sample(0.00042278988831448487),
      Sample(0.00020201610537207455),  Sample(-0.0012947658327677118),
      Sample(0.002654154005191139),    Sample(-0.0037880683075866956),
      Sample(0.0039757647293361936),   Sample(-0.0024843896059803046),
      Sample(-0.001085838814003435),   Sample(0.006428595919357397),
      Sample(-0.01228834160635799),    Sample(0.016509643319757145),
      Sample(-0.01647473758797547),    Sample(0.009896703280957233),
      Sample(0.004212443447799572),    Sample(-0.02468282582642549),
      Sample(0.0477118531652507),      Sample(-0.06686033005365434),
      Sample(0.07308648209025327),     Sample(-0.05257463263575798),
      Sample(-0.03293909732582619),    Sample(0.7748191132052644),
      Sample(0.390832967572434),       Sample(-0.17716697280215266),
      Sample(0.08789315351685599),     Sample(-0.029937820825435592),
      Sample(-0.007671527329164781),   Sample(0.027793055590637814),
      Sample(-0.033379718058813054),   Sample(0.028627990791598563),
      Sample(-0.01838481231098439),    Sample(0.00711868321471589),
      Sample(0.001943772871688035),    Sample(-0.007221021739455493),
      Sample(0.00866867049735588),     Sample(-0.007295323883341965),
      Sample(0.004531750198567448),    Sample(-0.0016772736880051454),
      Sample(-0.00043323552692926034), Sample(0.001507860816583226),
      Sample(-0.0016800362642002407),  Sample(0.0012997418940650692),
      Sample(-0.0007347085809158693),  Sample(0.0002447034126812542),
      Sample(5.616110754134853e-05),   Sample(-0.0001711150663542699),
      Sample(0.00016392808254720812),  Sample(-0.00010662345055515292),
      Sample(4.922088396624319e-05),   Sample(-1.2871170416799673e-05),
      Sample(-2.19174345546824e-06),   Sample(4.534352531148017e-06),
      Sample(-2.511484741200619e-06),  Sample(6.315990066502864e-07),
    },
    {
      Sample(-3.333470989835214e-07),  Sample(-1.689885491200597e-06),
      Sample(9.463461423673553e-06),   Sample(-2.5706449133471677e-05),
      Sample(4.7079266086554464e-05),  Sample(-5.805939869694123e-05),
      Sample(2.883850033124271e-05),   Sample(7.636436152749725e-05),
      Sample(-0.00027677741365253857), Sample(0.0005423056231455877),
      Sample(-0.0007653744418273989),  Sample(0.0007606547307629523),
      Sample(-0.0003144986546716794),  Sample(-0.0007104888897566639),
      Sample(0.002240108635133903),    Sample(-0.003879404200207859),
      Sample(0.004904629328319931),    Sample(-0.004417740847011384),
      Sample(0.0016728745052566215),   Sample(0.0034951426590087604),
      Sample(-0.010287935066861266),   Sample(0.016791954554846833),
      Sample(-0.020211006074203994),   Sample(0.01752684329398332),
      Sample(-0.006475164427949058),   Sample(-0.01342076169568386),
      Sample(0.04007749812120038),     Sample(-0.06856303952070188),
      Sample(0.0911449859299689),      Sample(-0.09621662936195627),
      Sample(0.054796576997573905),    Sample(0.8184650415613016),
      Sample(0.27229771569082856),     Sample(-0.16314922034596596),
      Sample(0.09993751172539056),     Sample(-0.04964127938450531),
      Sample(0.0110938907288822),      Sample(0.01424097851058794),
      Sample(-0.02640284209074588),    Sample(0.027548409186997212),
      Sample(-0.021350382113709616),   Sample(0.011931195424230257),
      Sample(-0.002824697211132787),   Sample(-0.0037042877465821695),
      Sample(0.006846779810313887),    Sample(-0.0069961264309640996),
      Sample(0.005236336967784417),    Sample(-0.0027932549521544944),
      Sample(0.000624792665496566),    Sample(0.0007667270471964343),
      Sample(-0.0013137542968060876),  Sample(0.0012325315731454647),
      Sample(-0.0008383523038353195),  Sample(0.0004018360221930446),
      Sample(-7.972617852128918e-05),  Sample(-8.547296743118735e-05),
      Sample(0.00012560663752567055),  Sample(-9.875553414001997e-05),
      Sample(5.462354353664159e-05),   Sample(-2.0434752954418553e-05),
      Sample(2.9815682596051975e-06),  Sample(2.138572059755044e-06),
      Sample(-1.7632471030663119e-06), Sample(4.842394861521574e-07),
    },
  }};
};

} // namespace SomeDSP
