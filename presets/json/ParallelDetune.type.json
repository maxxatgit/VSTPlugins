[
  {
    "id": 0,
    "name": "bypass",
    "type": "I",
    "default": 0,
    "scale": "Scales::boolScale",
    "flags": "Info::kCanAutomate | Info::kIsBypass"
  },
  {
    "id": 1,
    "name": "dryGain",
    "type": "d",
    "default": "Scales::gain.invmapDB(0.0)",
    "scale": "Scales::gain",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 2,
    "name": "wetGain",
    "type": "d",
    "default": "Scales::gain.invmapDB(0.0)",
    "scale": "Scales::gain",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 3,
    "name": "panSpread",
    "type": "d",
    "default": 0.0,
    "scale": "Scales::defaultScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 4,
    "name": "lfoToPan",
    "type": "d",
    "default": 0.0,
    "scale": "Scales::defaultScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 5,
    "name": "tremoloMix",
    "type": "d",
    "default": 0.0,
    "scale": "Scales::tremoloMix",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 6,
    "name": "tremoloLean",
    "type": "d",
    "default": 0.5,
    "scale": "Scales::defaultScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 7,
    "name": "feed",
    "type": "d",
    "default": 0.5,
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 8,
    "name": "delayTimeSeconds",
    "type": "d",
    "default": "Scales::delayTimeSeconds.invmap(0.1)",
    "scale": "Scales::delayTimeSeconds",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 9,
    "name": "shiftTransposeSemitone",
    "type": "d",
    "default": "Scales::shiftTransposeSemitone.invmap(0.0)",
    "scale": "Scales::shiftTransposeSemitone",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 10,
    "name": "shiftSemitone0",
    "type": "d",
    "default": "Scales::shiftSemitone.invmap(0.0)",
    "scale": "Scales::shiftSemitone",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 11,
    "name": "shiftSemitone1",
    "type": "d",
    "default": "Scales::shiftSemitone.invmap(0.0)",
    "scale": "Scales::shiftSemitone",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 12,
    "name": "shiftSemitone2",
    "type": "d",
    "default": "Scales::shiftSemitone.invmap(0.0)",
    "scale": "Scales::shiftSemitone",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 13,
    "name": "shiftSemitone3",
    "type": "d",
    "default": "Scales::shiftSemitone.invmap(0.0)",
    "scale": "Scales::shiftSemitone",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 14,
    "name": "shiftSemitone4",
    "type": "d",
    "default": "Scales::shiftSemitone.invmap(0.0)",
    "scale": "Scales::shiftSemitone",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 15,
    "name": "shiftSemitone5",
    "type": "d",
    "default": "Scales::shiftSemitone.invmap(0.0)",
    "scale": "Scales::shiftSemitone",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 16,
    "name": "shiftSemitone6",
    "type": "d",
    "default": "Scales::shiftSemitone.invmap(0.0)",
    "scale": "Scales::shiftSemitone",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 17,
    "name": "shiftSemitone7",
    "type": "d",
    "default": "Scales::shiftSemitone.invmap(0.0)",
    "scale": "Scales::shiftSemitone",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 18,
    "name": "shiftFineTuningCent0",
    "type": "d",
    "default": "Scales::shiftFineTuningCent.invmap(0.0)",
    "scale": "Scales::shiftFineTuningCent",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 19,
    "name": "shiftFineTuningCent1",
    "type": "d",
    "default": "Scales::shiftFineTuningCent.invmap(0.0)",
    "scale": "Scales::shiftFineTuningCent",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 20,
    "name": "shiftFineTuningCent2",
    "type": "d",
    "default": "Scales::shiftFineTuningCent.invmap(0.0)",
    "scale": "Scales::shiftFineTuningCent",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 21,
    "name": "shiftFineTuningCent3",
    "type": "d",
    "default": "Scales::shiftFineTuningCent.invmap(0.0)",
    "scale": "Scales::shiftFineTuningCent",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 22,
    "name": "shiftFineTuningCent4",
    "type": "d",
    "default": "Scales::shiftFineTuningCent.invmap(0.0)",
    "scale": "Scales::shiftFineTuningCent",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 23,
    "name": "shiftFineTuningCent5",
    "type": "d",
    "default": "Scales::shiftFineTuningCent.invmap(0.0)",
    "scale": "Scales::shiftFineTuningCent",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 24,
    "name": "shiftFineTuningCent6",
    "type": "d",
    "default": "Scales::shiftFineTuningCent.invmap(0.0)",
    "scale": "Scales::shiftFineTuningCent",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 25,
    "name": "shiftFineTuningCent7",
    "type": "d",
    "default": "Scales::shiftFineTuningCent.invmap(0.0)",
    "scale": "Scales::shiftFineTuningCent",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 26,
    "name": "shifterGain0",
    "type": "d",
    "default": "Scales::tremoloMix.invmap(1.0)",
    "scale": "Scales::tremoloMix",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 27,
    "name": "shifterGain1",
    "type": "d",
    "default": "Scales::tremoloMix.invmap(1.0)",
    "scale": "Scales::tremoloMix",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 28,
    "name": "shifterGain2",
    "type": "d",
    "default": "Scales::tremoloMix.invmap(1.0)",
    "scale": "Scales::tremoloMix",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 29,
    "name": "shifterGain3",
    "type": "d",
    "default": "Scales::tremoloMix.invmap(1.0)",
    "scale": "Scales::tremoloMix",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 30,
    "name": "shifterGain4",
    "type": "d",
    "default": "Scales::tremoloMix.invmap(1.0)",
    "scale": "Scales::tremoloMix",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 31,
    "name": "shifterGain5",
    "type": "d",
    "default": "Scales::tremoloMix.invmap(1.0)",
    "scale": "Scales::tremoloMix",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 32,
    "name": "shifterGain6",
    "type": "d",
    "default": "Scales::tremoloMix.invmap(1.0)",
    "scale": "Scales::tremoloMix",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 33,
    "name": "shifterGain7",
    "type": "d",
    "default": "Scales::tremoloMix.invmap(1.0)",
    "scale": "Scales::tremoloMix",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 34,
    "name": "shifterDelayTimeMultiplier0",
    "type": "d",
    "default": "Scales::delayTimeMultiplier.invmapDB(0.0)",
    "scale": "Scales::delayTimeMultiplier",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 35,
    "name": "shifterDelayTimeMultiplier1",
    "type": "d",
    "default": "Scales::delayTimeMultiplier.invmapDB(0.0)",
    "scale": "Scales::delayTimeMultiplier",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 36,
    "name": "shifterDelayTimeMultiplier2",
    "type": "d",
    "default": "Scales::delayTimeMultiplier.invmapDB(0.0)",
    "scale": "Scales::delayTimeMultiplier",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 37,
    "name": "shifterDelayTimeMultiplier3",
    "type": "d",
    "default": "Scales::delayTimeMultiplier.invmapDB(0.0)",
    "scale": "Scales::delayTimeMultiplier",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 38,
    "name": "shifterDelayTimeMultiplier4",
    "type": "d",
    "default": "Scales::delayTimeMultiplier.invmapDB(0.0)",
    "scale": "Scales::delayTimeMultiplier",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 39,
    "name": "shifterDelayTimeMultiplier5",
    "type": "d",
    "default": "Scales::delayTimeMultiplier.invmapDB(0.0)",
    "scale": "Scales::delayTimeMultiplier",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 40,
    "name": "shifterDelayTimeMultiplier6",
    "type": "d",
    "default": "Scales::delayTimeMultiplier.invmapDB(0.0)",
    "scale": "Scales::delayTimeMultiplier",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 41,
    "name": "shifterDelayTimeMultiplier7",
    "type": "d",
    "default": "Scales::delayTimeMultiplier.invmapDB(0.0)",
    "scale": "Scales::delayTimeMultiplier",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 42,
    "name": "shifterHighpassOffset0",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 43,
    "name": "shifterHighpassOffset1",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 44,
    "name": "shifterHighpassOffset2",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 45,
    "name": "shifterHighpassOffset3",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 46,
    "name": "shifterHighpassOffset4",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 47,
    "name": "shifterHighpassOffset5",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 48,
    "name": "shifterHighpassOffset6",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 49,
    "name": "shifterHighpassOffset7",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 50,
    "name": "shifterLowpassOffset0",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 51,
    "name": "shifterLowpassOffset1",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 52,
    "name": "shifterLowpassOffset2",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 53,
    "name": "shifterLowpassOffset3",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 54,
    "name": "shifterLowpassOffset4",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 55,
    "name": "shifterLowpassOffset5",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 56,
    "name": "shifterLowpassOffset6",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 57,
    "name": "shifterLowpassOffset7",
    "type": "d",
    "default": "Scales::shiftOctave.invmap(0.0)",
    "scale": "Scales::shiftOctave",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 58,
    "name": "highpassHz",
    "type": "d",
    "default": 0.0,
    "scale": "Scales::cutoffHz",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 59,
    "name": "lowpassNormalizedCutoff",
    "type": "d",
    "default": 1.0,
    "scale": "Scales::normalizedCutoff",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 60,
    "name": "lfoToDelayTime",
    "type": "d",
    "default": 0.5,
    "scale": "Scales::lfoOctaveAmount",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 61,
    "name": "lfoToShiftPitch",
    "type": "d",
    "default": 0.5,
    "scale": "Scales::lfoOctaveAmount",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 62,
    "name": "lfoWavetable0",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 0 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 63,
    "name": "lfoWavetable1",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 1 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 64,
    "name": "lfoWavetable2",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 2 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 65,
    "name": "lfoWavetable3",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 3 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 66,
    "name": "lfoWavetable4",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 4 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 67,
    "name": "lfoWavetable5",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 5 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 68,
    "name": "lfoWavetable6",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 6 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 69,
    "name": "lfoWavetable7",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 7 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 70,
    "name": "lfoWavetable8",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 8 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 71,
    "name": "lfoWavetable9",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 9 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 72,
    "name": "lfoWavetable10",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 10 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 73,
    "name": "lfoWavetable11",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 11 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 74,
    "name": "lfoWavetable12",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 12 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 75,
    "name": "lfoWavetable13",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 13 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 76,
    "name": "lfoWavetable14",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 14 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 77,
    "name": "lfoWavetable15",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 15 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 78,
    "name": "lfoWavetable16",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 16 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 79,
    "name": "lfoWavetable17",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 17 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 80,
    "name": "lfoWavetable18",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 18 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 81,
    "name": "lfoWavetable19",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 19 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 82,
    "name": "lfoWavetable20",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 20 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 83,
    "name": "lfoWavetable21",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 21 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 84,
    "name": "lfoWavetable22",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 22 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 85,
    "name": "lfoWavetable23",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 23 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 86,
    "name": "lfoWavetable24",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 24 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 87,
    "name": "lfoWavetable25",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 25 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 88,
    "name": "lfoWavetable26",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 26 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 89,
    "name": "lfoWavetable27",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 27 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 90,
    "name": "lfoWavetable28",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 28 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 91,
    "name": "lfoWavetable29",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 29 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 92,
    "name": "lfoWavetable30",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 30 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 93,
    "name": "lfoWavetable31",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 31 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 94,
    "name": "lfoWavetable32",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 32 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 95,
    "name": "lfoWavetable33",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 33 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 96,
    "name": "lfoWavetable34",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 34 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 97,
    "name": "lfoWavetable35",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 35 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 98,
    "name": "lfoWavetable36",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 36 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 99,
    "name": "lfoWavetable37",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 37 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 100,
    "name": "lfoWavetable38",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 38 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 101,
    "name": "lfoWavetable39",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 39 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 102,
    "name": "lfoWavetable40",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 40 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 103,
    "name": "lfoWavetable41",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 41 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 104,
    "name": "lfoWavetable42",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 42 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 105,
    "name": "lfoWavetable43",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 43 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 106,
    "name": "lfoWavetable44",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 44 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 107,
    "name": "lfoWavetable45",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 45 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 108,
    "name": "lfoWavetable46",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 46 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 109,
    "name": "lfoWavetable47",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 47 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 110,
    "name": "lfoWavetable48",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 48 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 111,
    "name": "lfoWavetable49",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 49 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 112,
    "name": "lfoWavetable50",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 50 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 113,
    "name": "lfoWavetable51",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 51 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 114,
    "name": "lfoWavetable52",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 52 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 115,
    "name": "lfoWavetable53",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 53 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 116,
    "name": "lfoWavetable54",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 54 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 117,
    "name": "lfoWavetable55",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 55 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 118,
    "name": "lfoWavetable56",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 56 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 119,
    "name": "lfoWavetable57",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 57 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 120,
    "name": "lfoWavetable58",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 58 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 121,
    "name": "lfoWavetable59",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 59 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 122,
    "name": "lfoWavetable60",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 60 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 123,
    "name": "lfoWavetable61",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 61 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 124,
    "name": "lfoWavetable62",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 62 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 125,
    "name": "lfoWavetable63",
    "type": "d",
    "default": "Scales::bipolarScale.invmap(std::sin(double(2) * std::numbers::pi_v<double> * 63 / double(nLfoWavetable)))",
    "scale": "Scales::bipolarScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 126,
    "name": "lfoInterpolation",
    "type": "I",
    "default": 2,
    "scale": "Scales::lfoInterpolation",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 127,
    "name": "lfoTempoSync",
    "type": "I",
    "default": 0,
    "scale": "Scales::boolScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 128,
    "name": "lfoTempoUpper",
    "type": "I",
    "default": 0,
    "scale": "Scales::lfoTempoUpper",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 129,
    "name": "lfoTempoLower",
    "type": "I",
    "default": 0,
    "scale": "Scales::lfoTempoLower",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 130,
    "name": "lfoRate",
    "type": "d",
    "default": "Scales::lfoRate.invmap(1.0)",
    "scale": "Scales::lfoRate",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 131,
    "name": "lfoPhaseOffset",
    "type": "d",
    "default": 0.0,
    "scale": "Scales::defaultScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 132,
    "name": "lfoPhaseConstant",
    "type": "d",
    "default": 0.0,
    "scale": "Scales::defaultScale",
    "flags": "Info::kCanAutomate"
  },
  {
    "id": 133,
    "name": "parameterSmoothingSecond",
    "type": "d",
    "default": "Scales::parameterSmoothingSecond.invmap(0.2)",
    "scale": "Scales::parameterSmoothingSecond",
    "flags": "Info::kCanAutomate"
  }
]
